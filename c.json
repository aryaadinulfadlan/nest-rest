{"level":"info","message":"Register new user {\"username\":\"khan\",\"name\":\"Khan Ahmed\",\"password\":\"asdfgh\"}"}
{"level":"info","message":"Starting a mysql pool with 17 connections.","target":"quaint::pooled","timestamp":"2024-10-12T05:14:23.258Z"}

{"level":"info","message":{"duration":1,"params":"[\"khan\",1,0]","query":"SELECT `nest_rest`.`users`.`id`, `nest_rest`.`users`.`username`, `nest_rest`.`users`.`password`, `nest_rest`.`users`.`name`, `nest_rest`.`users`.`token` FROM `nest_rest`.`users` WHERE (`nest_rest`.`users`.`username` = ? AND 1=1) LIMIT ? OFFSET ?","target":"quaint::connector::metrics","timestamp":"2024-10-12T05:14:23.274Z"}}

{"level":"info","message":{"duration":0,"params":"[]","query":"BEGIN","target":"quaint::connector::metrics","timestamp":"2024-10-12T05:14:23.341Z"}}

{"level":"info","message":{"duration":0,"params":"[\"cm25pc5po0000uf5nyvm7sv78\",\"khan\",\"$2b$10$S54RqkabIYVTz9H5AQPaFe0TBtpsbbJN1CHr1oCYXplchGGvNN.cS\",\"Khan Ahmed\"]","query":"INSERT INTO `nest_rest`.`users` (`id`,`username`,`password`,`name`) VALUES (?,?,?,?)","target":"quaint::connector::metrics","timestamp":"2024-10-12T05:14:23.342Z"}}

{"level":"info","message":{"duration":0,"params":"[]","query":"ROLLBACK","target":"quaint::connector::metrics","timestamp":"2024-10-12T05:14:23.342Z"}}

{"level":"error","message":"\nInvalid `this.prismaService.user.create()` invocation in\n/Users/aryaadinulfadlan/Data/Backend/restful_api/src/user/user.service.ts:30:48\n\n  27   throw new HttpException('Username already exists', 400);\n  28 }\n  29 registerRequest.password = await bcrypt.hash(registerRequest.password, 10);\n→ 30 const user = await this.prismaService.user.create(\nThe provided value for the column is too long for the column's type. Column: password","target":"user.create","timestamp":"2024-10-12T05:14:23.346Z"}

{"context":"ExceptionsHandler","level":"error","message":"\nInvalid `this.prismaService.user.create()` invocation in\n/Users/aryaadinulfadlan/Data/Backend/restful_api/src/user/user.service.ts:30:48\n\n  27   throw new HttpException('Username already exists', 400);\n  28 }\n  29 registerRequest.password = await bcrypt.hash(registerRequest.password, 10);\n→ 30 const user = await this.prismaService.user.create(\nThe provided value for the column is too long for the column's type. Column: password","stack":["PrismaClientKnownRequestError: \nInvalid `this.prismaService.user.create()` invocation in\n/Users/aryaadinulfadlan/Data/Backend/restful_api/src/user/user.service.ts:30:48\n\n  27   throw new HttpException('Username already exists', 400);\n  28 }\n  29 registerRequest.password = await bcrypt.hash(registerRequest.password, 10);\n→ 30 const user = await this.prismaService.user.create(\nThe provided value for the column is too long for the column's type. Column: password\n    at Mn.handleRequestError (/Users/aryaadinulfadlan/Data/Backend/restful_api/node_modules/@prisma/client/runtime/library.js:121:7753)\n    at Mn.handleAndLogRequestError (/Users/aryaadinulfadlan/Data/Backend/restful_api/node_modules/@prisma/client/runtime/library.js:121:7061)\n    at Mn.request (/Users/aryaadinulfadlan/Data/Backend/restful_api/node_modules/@prisma/client/runtime/library.js:121:6745)\n    at async l (/Users/aryaadinulfadlan/Data/Backend/restful_api/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at UserService.register (/Users/aryaadinulfadlan/Data/Backend/restful_api/src/user/user.service.ts:30:18)\n    at UserController.register (/Users/aryaadinulfadlan/Data/Backend/restful_api/src/user/user.controller.ts:13:20)\n    at async /Users/aryaadinulfadlan/Data/Backend/restful_api/node_modules/@nestjs/core/router/router-execution-context.js:46:28\n    at async /Users/aryaadinulfadlan/Data/Backend/restful_api/node_modules/@nestjs/core/router/router-proxy.js:9:17"]}